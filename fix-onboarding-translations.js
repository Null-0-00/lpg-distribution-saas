const fs = require('fs');
const path = require('path');

const filePath = path.join(__dirname, 'src/lib/i18n/translations.ts');

console.log('ЁЯФз Fixing onboarding translations...');

// Comprehensive mapping of onboarding translations
const onboardingTranslations = {
  // Core onboarding
  welcomeToOnboarding: 'рж╕рзЗржЯржЖржкрзЗ рж╕рзНржмрж╛ржЧрждржо',
  setupYourBusinessData: 'рж╢рзБрж░рзБ ржХрж░рждрзЗ ржЖржкржирж╛рж░ ржмрзНржпржмрж╕рж╛ржпрж╝рж┐ржХ рждржерзНржп рж╕рзЗржЯржЖржк ржХрж░рзБржи',
  companyNames: 'ржХрзЛржорзНржкрж╛ржирж┐рж░ ржирж╛ржо',
  productSetup: 'ржкржгрзНржп рж╕рзЗржЯржЖржк',
  inventoryQuantities: 'ржЗржиржнрзЗржирзНржЯрж░рж┐ ржкрж░рж┐ржорж╛ржг',
  driversSetup: 'ржЪрж╛рж▓ржХ рж╕рзЗржЯржЖржк',
  receivablesSetup: 'ржмрж╛ржХрж┐ рж╕рзЗржЯржЖржк',
  skipOnboarding: 'рж╕рзЗржЯржЖржк ржПржбрж╝рж┐ржпрж╝рзЗ ржпрж╛ржи',
  completing: 'рж╕ржорзНржкржирзНржи ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ...',
  completeSetup: 'рж╕рзЗржЯржЖржк рж╕ржорзНржкржирзНржи ржХрж░рзБржи',
  setupBusiness: 'ржмрзНржпржмрж╕рж╛ рж╕рзЗржЯржЖржк',

  // Company step
  addCompanyNames: 'ржХрзЛржорзНржкрж╛ржирж┐рж░ ржирж╛ржо ржпрзЛржЧ ржХрж░рзБржи',
  addCompaniesYouDistributeFor:
    'ржЖржкржирж┐ ржпрзЗ ржХрзЛржорзНржкрж╛ржирж┐ржЧрзБрж▓рж┐рж░ ржЬржирзНржп ржмрж┐рждрж░ржг ржХрж░рзЗржи рждрж╛ ржпрзЛржЧ ржХрж░рзБржи',
  addNewCompany: 'ржирждрзБржи ржХрзЛржорзНржкрж╛ржирж┐ ржпрзЛржЧ ржХрж░рзБржи',
  enterCompanyNamesLikeAygaz:
    'ржЖржпрж╝ржЧрж╛ржЬ, ржмрж╛рж╢рзБржирзНржзрж░рж╛ ржЧрзНржпрж╛рж╕рзЗрж░ ржорждрзЛ ржХрзЛржорзНржкрж╛ржирж┐рж░ ржирж╛ржо рж▓рж┐ржЦрзБржи',
  companyName: 'ржХрзЛржорзНржкрж╛ржирж┐рж░ ржирж╛ржо',
  enterCompanyName: 'ржХрзЛржорзНржкрж╛ржирж┐рж░ ржирж╛ржо рж▓рж┐ржЦрзБржи',
  companyNameRequired: 'ржХрзЛржорзНржкрж╛ржирж┐рж░ ржирж╛ржо ржкрзНрж░ржпрж╝рзЛржЬржи',
  companyAlreadyExists: 'ржХрзЛржорзНржкрж╛ржирж┐ ржЗрждрж┐ржоржзрзНржпрзЗ ржмрж┐ржжрзНржпржорж╛ржи',
  addedCompanies: 'ржпрзЛржЧ ржХрж░рж╛ ржХрзЛржорзНржкрж╛ржирж┐',
  companiesYouDistributeFor: 'ржЖржкржирж┐ ржпрзЗ ржХрзЛржорзНржкрж╛ржирж┐ржЧрзБрж▓рж┐рж░ ржЬржирзНржп ржмрж┐рждрж░ржг ржХрж░рзЗржи',
  noCompaniesAdded: 'ржХрзЛржирзЛ ржХрзЛржорзНржкрж╛ржирж┐ ржпрзЛржЧ ржХрж░рж╛ рж╣ржпрж╝ржирж┐',
  addAtLeastOneCompany: 'ржЕржирзНрждржд ржПржХржЯрж┐ ржХрзЛржорзНржкрж╛ржирж┐ ржпрзЛржЧ ржХрж░рзБржи',

  // Product step
  setupProductsAndSizes: 'ржкржгрзНржп ржПржмржВ ржЖржХрж╛рж░ рж╕рзЗржЯржЖржк ржХрж░рзБржи',
  configureCylinderSizesAndProducts: 'рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░рзЗрж░ ржЖржХрж╛рж░ ржПржмржВ ржкржгрзНржп ржХржиржлрж┐ржЧрж╛рж░ ржХрж░рзБржи',
  cylinderSizes: 'рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░рзЗрж░ ржЖржХрж╛рж░',
  addCylinderSize: 'рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░рзЗрж░ ржЖржХрж╛рж░ ржпрзЛржЧ ржХрж░рзБржи',
  addSizesLike12L20L: 'рззрзи рж▓рж┐ржЯрж╛рж░, рзирзж рж▓рж┐ржЯрж╛рж░рзЗрж░ ржорждрзЛ ржЖржХрж╛рж░ ржпрзЛржЧ ржХрж░рзБржи',
  enterSizeLike12L: 'рззрзи рж▓рж┐ржЯрж╛рж░ ржПрж░ ржорждрзЛ ржЖржХрж╛рж░ рж▓рж┐ржЦрзБржи',
  addSize: 'ржЖржХрж╛рж░ ржпрзЛржЧ ржХрж░рзБржи',
  cylinderSizeRequired: 'рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░рзЗрж░ ржЖржХрж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи',
  cylinderSizeAlreadyExists: 'рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░рзЗрж░ ржЖржХрж╛рж░ ржЗрждрж┐ржоржзрзНржпрзЗ ржмрж┐ржжрзНржпржорж╛ржи',
  enterDescription: 'ржмрж┐ржмрж░ржг рж▓рж┐ржЦрзБржи',
  addProduct: 'ржкржгрзНржп ржпрзЛржЧ ржХрж░рзБржи',
  addProductsForEachCompany: 'ржкрзНрж░рждрж┐ржЯрж┐ ржХрзЛржорзНржкрж╛ржирж┐рж░ ржЬржирзНржп ржкржгрзНржп ржпрзЛржЧ ржХрж░рзБржи',
  productName: 'ржкржгрзНржпрзЗрж░ ржирж╛ржо',
  enterProductName: 'ржкржгрзНржпрзЗрж░ ржирж╛ржо рж▓рж┐ржЦрзБржи',
  currentPrice: 'ржмрж░рзНрждржорж╛ржи ржжрж╛ржо',
  enterPrice: 'ржжрж╛ржо рж▓рж┐ржЦрзБржи',
  productNameRequired: 'ржкржгрзНржпрзЗрж░ ржирж╛ржо ржкрзНрж░ржпрж╝рзЛржЬржи',
  validPriceRequired: 'ржмрзИржз ржжрж╛ржо ржкрзНрж░ржпрж╝рзЛржЬржи',
  productAlreadyExists: 'ржкржгрзНржп ржЗрждрж┐ржоржзрзНржпрзЗ ржмрж┐ржжрзНржпржорж╛ржи',
  addedProducts: 'ржпрзЛржЧ ржХрж░рж╛ ржкржгрзНржп',
  addCylinderSizesAndProducts: 'рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░рзЗрж░ ржЖржХрж╛рж░ ржПржмржВ ржкржгрзНржп ржпрзЛржЧ ржХрж░рзБржи',
  bothRequiredToProceed: 'ржПржЧрж┐ржпрж╝рзЗ ржпрзЗрждрзЗ ржЙржнржпрж╝ржЗ ржкрзНрж░ржпрж╝рзЛржЬржи',

  // Inventory step
  setInitialInventory: 'ржкрзНрж░рж╛ржержорж┐ржХ ржЗржиржнрзЗржирзНржЯрж░рж┐ рж╕рзЗржЯ ржХрж░рзБржи',
  enterCurrentFullCylinderQuantities: 'ржмрж░рзНрждржорж╛ржи ржкрзВрж░рзНржг рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░рзЗрж░ ржкрж░рж┐ржорж╛ржг рж▓рж┐ржЦрзБржи',
  fullCylinderInventory: 'ржкрзВрж░рзНржг рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░ ржЗржиржнрзЗржирзНржЯрж░рж┐',
  enterQuantityForEachProduct: 'ржкрзНрж░рждрж┐ржЯрж┐ ржкржгрзНржпрзЗрж░ ржЬржирзНржп ржкрж░рж┐ржорж╛ржг рж▓рж┐ржЦрзБржи',
  noProductsAvailable: 'ржХрзЛржирзЛ ржкржгрзНржп ржЙржкрж▓ржмрзНржз ржирзЗржЗ',
  addProductsFirst: 'ржкрзНрж░ржержорзЗ ржкржгрзНржп ржпрзЛржЧ ржХрж░рзБржи',
  totalProducts: 'ржорзЛржЯ ржкржгрзНржп',
  totalFullCylinders: 'ржорзЛржЯ ржкрзВрж░рзНржг рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░',

  // Empty cylinders step
  setEmptyCylinderInventory: 'ржЦрж╛рж▓рж┐ рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░ ржЗржиржнрзЗржирзНржЯрж░рж┐ рж╕рзЗржЯ ржХрж░рзБржи',
  enterCurrentEmptyCylinderQuantities: 'ржмрж░рзНрждржорж╛ржи ржЦрж╛рж▓рж┐ рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░рзЗрж░ ржкрж░рж┐ржорж╛ржг рж▓рж┐ржЦрзБржи',
  emptyCylinderInventory: 'ржЦрж╛рж▓рж┐ рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░ ржЗржиржнрзЗржирзНржЯрж░рж┐',
  enterQuantityForEachSize: 'ржкрзНрж░рждрж┐ржЯрж┐ ржЖржХрж╛рж░рзЗрж░ ржЬржирзНржп ржкрж░рж┐ржорж╛ржг рж▓рж┐ржЦрзБржи',
  noCylinderSizesAvailable: 'ржХрзЛржирзЛ рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░рзЗрж░ ржЖржХрж╛рж░ ржЙржкрж▓ржмрзНржз ржирзЗржЗ',
  addCylinderSizesFirst: 'ржкрзНрж░ржержорзЗ рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░рзЗрж░ ржЖржХрж╛рж░ ржпрзЛржЧ ржХрж░рзБржи',
  totalSizes: 'ржорзЛржЯ ржЖржХрж╛рж░',
  totalEmptyCylinders: 'ржорзЛржЯ ржЦрж╛рж▓рж┐ рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░',

  // Drivers step
  addYourDrivers: 'ржЖржкржирж╛рж░ ржЪрж╛рж▓ржХ ржпрзЛржЧ ржХрж░рзБржи',
  addDriversWhoWillSellProducts: 'ржпрзЗ ржЪрж╛рж▓ржХрж░рж╛ ржкржгрзНржп ржмрж┐ржХрзНрж░рж┐ ржХрж░ржмрзЗржи рждрж╛ржжрзЗрж░ ржпрзЛржЧ ржХрж░рзБржи',
  enterDriverInformation: 'ржЪрж╛рж▓ржХрзЗрж░ рждржерзНржп рж▓рж┐ржЦрзБржи',
  enterDriverName: 'ржЪрж╛рж▓ржХрзЗрж░ ржирж╛ржо рж▓рж┐ржЦрзБржи',
  shipmentDriver: 'рж╢рж┐ржкржорзЗржирзНржЯ ржЪрж╛рж▓ржХ',
  driverNameRequired: 'ржЪрж╛рж▓ржХрзЗрж░ ржирж╛ржо ржкрзНрж░ржпрж╝рзЛржЬржи',
  driverAlreadyExists: 'ржЪрж╛рж▓ржХ ржЗрждрж┐ржоржзрзНржпрзЗ ржмрж┐ржжрзНржпржорж╛ржи',
  addedDrivers: 'ржпрзЛржЧ ржХрж░рж╛ ржЪрж╛рж▓ржХ',
  driversInYourTeam: 'ржЖржкржирж╛рж░ ржжрж▓рзЗрж░ ржЪрж╛рж▓ржХрж░рж╛',
  noContactInfo: 'ржХрзЛржирзЛ ржпрзЛржЧрж╛ржпрзЛржЧрзЗрж░ рждржерзНржп ржирзЗржЗ',
  noDriversAdded: 'ржХрзЛржирзЛ ржЪрж╛рж▓ржХ ржпрзЛржЧ ржХрж░рж╛ рж╣ржпрж╝ржирж┐',
  addAtLeastOneDriver: 'ржЕржирзНрждржд ржПржХржЬржи ржЪрж╛рж▓ржХ ржпрзЛржЧ ржХрж░рзБржи',

  // Receivables step
  setupReceivables: 'ржмрж╛ржХрж┐ рж╕рзЗржЯржЖржк ржХрж░рзБржи',
  enterCurrentReceivablesForEachDriver:
    'ржкрзНрж░рждрж┐ржЯрж┐ ржЪрж╛рж▓ржХрзЗрж░ ржЬржирзНржп ржмрж░рзНрждржорж╛ржи ржмрж╛ржХрж┐ рж▓рж┐ржЦрзБржи',
  driverReceivables: 'ржЪрж╛рж▓ржХрзЗрж░ ржмрж╛ржХрж┐',
  enterCashAndCylinderReceivables: 'ржиржЧржж ржПржмржВ рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░ ржмрж╛ржХрж┐ рж▓рж┐ржЦрзБржи',
  amountOwedByCustomers: 'ржЧрзНрж░рж╛рж╣ржХржжрзЗрж░ ржХрж╛ржЫрзЗ ржкрж╛ржУржирж╛ ржЯрж╛ржХрж╛',
  cylindersOwedByCustomers: 'ржЧрзНрж░рж╛рж╣ржХржжрзЗрж░ ржХрж╛ржЫрзЗ ржкрж╛ржУржирж╛ рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░',
  cylindersOwedByCustomersBySize:
    'ржЖржХрж╛рж░ ржЕржирзБржпрж╛ржпрж╝рзА ржЧрзНрж░рж╛рж╣ржХржжрзЗрж░ ржХрж╛ржЫрзЗ ржкрж╛ржУржирж╛ рж╕рж┐рж▓рж┐ржирзНржбрж╛рж░',
  noDriversAvailable: 'ржХрзЛржирзЛ ржЪрж╛рж▓ржХ ржЙржкрж▓ржмрзНржз ржирзЗржЗ',
  addDriversFirst: 'ржкрзНрж░ржержорзЗ ржЪрж╛рж▓ржХ ржпрзЛржЧ ржХрж░рзБржи',
  noRetailDriversAvailable: 'ржХрзЛржирзЛ ржЦрзБржЪрж░рж╛ ржЪрж╛рж▓ржХ ржЙржкрж▓ржмрзНржз ржирзЗржЗ',
  addRetailDriversFirst: 'ржкрзНрж░ржержорзЗ ржЦрзБржЪрж░рж╛ ржЪрж╛рж▓ржХ ржпрзЛржЧ ржХрж░рзБржи',
  receivablesSummary: 'ржмрж╛ржХрж┐ рж╕рж╛рж░рж╕ржВржХрзНрж╖рзЗржк',

  // Admin onboarding
  manualBusinessOnboarding: 'ржорзНржпрж╛ржирзБржпрж╝рж╛рж▓ ржмрзНржпржмрж╕рж╛ржпрж╝рж┐ржХ ржЕржиржмрзЛрж░рзНржбрж┐ржВ',
  businessInformation: 'ржмрзНржпржмрж╕рж╛ржпрж╝рж┐ржХ рждржерзНржп',
  businessName: 'ржмрзНржпржмрж╕рж╛рж░ ржирж╛ржо',
  businessNamePlaceholder: 'ржпрзЗржоржи, ржврж╛ржХрж╛ ржЧрзНржпрж╛рж╕ ржбрж┐рж╕рзНржЯрзНрж░рж┐ржмрж┐ржЙржЯрж░рж╕ рж▓рж┐ржорж┐ржЯрзЗржб',
  subdomain: 'рж╕рж╛ржмржбрзЛржорзЗржЗржи',
  subdomainPlaceholder: 'ржпрзЗржоржи, dhaka-gas',
  plan: 'ржкрж░рж┐ржХрж▓рзНржкржирж╛',
  freemium: 'ржлрзНрж░рж┐ржорж┐ржпрж╝рж╛ржо',
  professional: 'ржкрзЗрж╢рж╛ржжрж╛рж░',
  enterprise: 'ржПржирзНржЯрж╛рж░ржкрзНрж░рж╛ржЗржЬ',
  adminUser: 'ржЕрзНржпрж╛ржбржорж┐ржи ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА',
  adminName: 'ржЕрзНржпрж╛ржбржорж┐ржирзЗрж░ ржирж╛ржо',
  adminNamePlaceholder: 'ржпрзЗржоржи, ржЬржи ржбрзЛ',
  adminEmail: 'ржЕрзНржпрж╛ржбржорж┐ржирзЗрж░ ржЗржорзЗржЗрж▓',
  adminEmailPlaceholder: 'ржпрзЗржоржи, admin@company.com',
  adminPassword: 'ржЕрзНржпрж╛ржбржорж┐ржирзЗрж░ ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб',
  strongPassword: 'рж╢ржХрзНрждрж┐рж╢рж╛рж▓рзА ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб',
  creatingBusiness: 'ржмрзНржпржмрж╕рж╛ рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ...',
  onboardBusiness: 'ржмрзНржпржмрж╕рж╛ ржЕржиржмрзЛрж░рзНржб ржХрж░рзБржи',
  businessOnboardedSuccessfully: 'ржмрзНржпржмрж╕рж╛ рж╕ржлрж▓ржнрж╛ржмрзЗ ржЕржиржмрзЛрж░рзНржб рж╣ржпрж╝рзЗржЫрзЗ',
  businessCreatedWithAdmin: 'ржЕрзНржпрж╛ржбржорж┐ржи рж╕рж╣ ржмрзНржпржмрж╕рж╛ рждрзИрж░рж┐ рж╣ржпрж╝рзЗржЫрзЗ',
  failedToOnboardBusiness: 'ржмрзНржпржмрж╕рж╛ ржЕржиржмрзЛрж░рзНржб ржХрж░рждрзЗ ржмрзНржпрж░рзНрже',
  networkErrorOccurred: 'ржирзЗржЯржУржпрж╝рж╛рж░рзНржХ рждрзНрж░рзБржЯрж┐ ржШржЯрзЗржЫрзЗ',

  // API errors
  unauthorized: 'ржЕржиржирзБржорзЛржжрж┐ржд',
  userNotFound: 'ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐',
  onboardingAlreadyCompleted: 'ржЕржиржмрзЛрж░рзНржбрж┐ржВ ржЗрждрж┐ржоржзрзНржпрзЗ рж╕ржорзНржкржирзНржи',
  failedToCompleteOnboarding: 'ржЕржиржмрзЛрж░рзНржбрж┐ржВ рж╕ржорзНржкржирзНржи ржХрж░рждрзЗ ржмрзНржпрж░рзНрже',
  failedToCheckOnboardingStatus: 'ржЕржиржмрзЛрж░рзНржбрж┐ржВ рж╕рзНржерж┐рждрж┐ ржпрж╛ржЪрж╛ржЗ ржХрж░рждрзЗ ржмрзНржпрж░рзНрже',
};

// Read the current translations file
const content = fs.readFileSync(filePath, 'utf8');

console.log('ЁЯУЦ Reading current translations...');

// Replace each placeholder translation with proper Bengali translation
let updatedContent = content;
let replacementCount = 0;

Object.entries(onboardingTranslations).forEach(([key, bengaliTranslation]) => {
  // Look for patterns like: keyName: 'keyName', // TODO: Add Bengali translation
  const placeholderPattern = new RegExp(
    `(\\s+${key}:\\s+)'${key}',\\s*//\\s*TODO:\\s*Add Bengali translation`,
    'g'
  );

  // Also look for patterns without TODO comment
  const simplePattern = new RegExp(`(\\s+${key}:\\s+)'${key}',`, 'g');

  if (placeholderPattern.test(updatedContent)) {
    updatedContent = updatedContent.replace(
      placeholderPattern,
      `$1'${bengaliTranslation}',`
    );
    console.log(`тЬЕ Fixed: ${key} -> ${bengaliTranslation}`);
    replacementCount++;
  } else if (simplePattern.test(updatedContent)) {
    updatedContent = updatedContent.replace(
      simplePattern,
      `$1'${bengaliTranslation}',`
    );
    console.log(`тЬЕ Fixed: ${key} -> ${bengaliTranslation}`);
    replacementCount++;
  }
});

// Write the updated content back to the file
fs.writeFileSync(filePath, updatedContent);

console.log(
  `\nЁЯОЙ Successfully fixed ${replacementCount} onboarding translations!`
);
console.log('тЬи Onboarding should now display properly in Bengali.');
