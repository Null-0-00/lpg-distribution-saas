apiVersion: apps/v1
kind: Deployment
metadata:
  name: lpg-distributor-production
  namespace: lpg-distributor-production
  labels:
    app: lpg-distributor
    environment: production
    version: latest
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: lpg-distributor
      environment: production
  template:
    metadata:
      labels:
        app: lpg-distributor
        environment: production
        version: latest
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '3000'
        prometheus.io/path: '/api/metrics'
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
        - name: lpg-distributor
          image: ghcr.io/lpg-distributor/lpg-distributor-saas:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          env:
            - name: NODE_ENV
              value: 'production'
            - name: PORT
              value: '3000'
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: lpg-distributor-secrets
                  key: database-url
            - name: NEXTAUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: lpg-distributor-secrets
                  key: nextauth-secret
            - name: NEXTAUTH_URL
              value: 'https://lpg-distributor.com'
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: lpg-distributor-secrets
                  key: redis-url
            - name: STRIPE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: lpg-distributor-secrets
                  key: stripe-secret-key
            - name: STRIPE_WEBHOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: lpg-distributor-secrets
                  key: stripe-webhook-secret
            - name: VAPID_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: lpg-distributor-secrets
                  key: vapid-public-key
            - name: VAPID_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: lpg-distributor-secrets
                  key: vapid-private-key
            - name: SMTP_HOST
              valueFrom:
                configMapKeyRef:
                  name: lpg-distributor-config
                  key: smtp-host
            - name: SMTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: lpg-distributor-config
                  key: smtp-port
            - name: SMTP_USER
              valueFrom:
                secretKeyRef:
                  name: lpg-distributor-secrets
                  key: smtp-user
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lpg-distributor-secrets
                  key: smtp-password
            - name: S3_BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  name: lpg-distributor-config
                  key: s3-bucket-name
            - name: S3_REGION
              valueFrom:
                configMapKeyRef:
                  name: lpg-distributor-config
                  key: s3-region
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: lpg-distributor-secrets
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: lpg-distributor-secrets
                  key: aws-secret-access-key
          resources:
            requests:
              memory: '512Mi'
              cpu: '250m'
            limits:
              memory: '1Gi'
              cpu: '500m'
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health/ready
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 30
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /app/.next/cache
      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
      imagePullSecrets:
        - name: ghcr-secret
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
        - key: 'kubernetes.io/arch'
          operator: 'Equal'
          value: 'amd64'
          effect: 'NoSchedule'

---
apiVersion: v1
kind: Service
metadata:
  name: lpg-distributor-service
  namespace: lpg-distributor-production
  labels:
    app: lpg-distributor
    environment: production
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '3000'
    prometheus.io/path: '/api/metrics'
spec:
  selector:
    app: lpg-distributor
    environment: production
  ports:
    - name: http
      port: 80
      targetPort: 3000
      protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lpg-distributor-ingress
  namespace: lpg-distributor-production
  labels:
    app: lpg-distributor
    environment: production
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/proxy-body-size: '10m'
    nginx.ingress.kubernetes.io/rate-limit: '100'
    nginx.ingress.kubernetes.io/rate-limit-window: '1m'
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: 'https://lpg-distributor.com'
    nginx.ingress.kubernetes.io/cors-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
    nginx.ingress.kubernetes.io/cors-allow-headers: 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization'
spec:
  tls:
    - hosts:
        - lpg-distributor.com
        - www.lpg-distributor.com
      secretName: lpg-distributor-tls
  rules:
    - host: lpg-distributor.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: lpg-distributor-service
                port:
                  number: 80
    - host: www.lpg-distributor.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: lpg-distributor-service
                port:
                  number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: lpg-distributor-hpa
  namespace: lpg-distributor-production
  labels:
    app: lpg-distributor
    environment: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: lpg-distributor-production
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
        - type: Pods
          value: 2
          periodSeconds: 60
      selectPolicy: Max

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: lpg-distributor-pdb
  namespace: lpg-distributor-production
  labels:
    app: lpg-distributor
    environment: production
spec:
  selector:
    matchLabels:
      app: lpg-distributor
      environment: production
  minAvailable: 2
