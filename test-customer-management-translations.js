const fs = require('fs');
const path = require('path');

// Read the translations file
const translationsPath = path.join(__dirname, 'src/lib/i18n/translations.ts');
const translationsContent = fs.readFileSync(translationsPath, 'utf8');

// Check if all the new translation keys are present
const newKeys = [
  'customerManagementTitle',
  'manageCustomersOrganizedByGeographicalAreas',
  'selectAreaFirst',
  'chooseAreaToViewAndManageCustomers',
  'selectAnArea',
  'selectAnAreaTitle',
  'pleaseSelectAreaFirstToViewCustomers',
  'searchCustomersCodesPhones',
  'allTypes',
  'activeOnly',
  'inactiveOnly',
  'showingCustomersInArea',
  'noMatchingCustomers',
  'addFirstCustomerToGetStarted',
  'tryAdjustingSearchOrFilter',
  'addFirstCustomer',
  'inactive',
  'code',
  'driver',
  'notAssigned',
  'outstanding',
  'sale',
  'sales',
  'receivable',
  'receivables',
  'areaRequired',
  'enterCustomerName',
  'assignDriver',
  'noDriverAssigned',
  'optionalAssignDriverToServeCustomer',
  'autoGeneratedIfEmpty',
  'phoneNumber',
  'requiredForAutomatedMessaging',
  'editAreaTooltip',
  'deleteAreaTooltip',
  'areaNamePlaceholder',
  'areaCodePlaceholder',
  'optionalDescriptionForArea',
];

console.log('Checking for new translation keys...\n');

let missingKeys = [];
let foundKeys = [];

newKeys.forEach((key) => {
  if (translationsContent.includes(`${key}:`)) {
    foundKeys.push(key);
    console.log(`✅ ${key} - Found`);
  } else {
    missingKeys.push(key);
    console.log(`❌ ${key} - Missing`);
  }
});

console.log(`\n📊 Summary:`);
console.log(`✅ Found: ${foundKeys.length} keys`);
console.log(`❌ Missing: ${missingKeys.length} keys`);

if (missingKeys.length === 0) {
  console.log('\n🎉 All translation keys have been successfully added!');
} else {
  console.log(
    '\n⚠️  Some translation keys are missing. Please add them to the translations file.'
  );
}

// Check if the keys exist in both English and Bengali sections
console.log('\n🔍 Checking language coverage...');

const englishSection = translationsContent.match(
  /const englishTranslations: Translations = \{([\s\S]*?)\};/
);
const bengaliSection = translationsContent.match(
  /const bengaliTranslations: Translations = \{([\s\S]*?)\};/
);

if (englishSection && bengaliSection) {
  const englishContent = englishSection[1];
  const bengaliContent = bengaliSection[1];

  let englishMissing = [];
  let bengaliMissing = [];

  foundKeys.forEach((key) => {
    if (!englishContent.includes(`${key}:`)) {
      englishMissing.push(key);
    }
    if (!bengaliContent.includes(`${key}:`)) {
      bengaliMissing.push(key);
    }
  });

  console.log(`🇺🇸 English missing: ${englishMissing.length} keys`);
  console.log(`🇧🇩 Bengali missing: ${bengaliMissing.length} keys`);

  if (englishMissing.length === 0 && bengaliMissing.length === 0) {
    console.log('\n🌍 All keys are available in both languages!');
  }
}
